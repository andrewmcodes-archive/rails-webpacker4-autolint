version: 2 # use CircleCI 2.0

anchors:
  - &base
    build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 3 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.0-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: "circleci-demo-ruby"
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: "circleci-demo-ruby"
          POSTGRES_DB: rails-webpacker4-autolint
          POSTGRES_PASSWORD: ""

  - &bundler:
    name: Which bundler?
    command: bundle -v

  - &bundle:
    name: Bundle Install
    command: bundle check || bundle install

  - &restore_gem_cache:
    keys:
    - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
    - rails-demo-bundle-v2-
    paths:
    - vendor/bundle

  - &yarn:
    name: Yarn Install
    command: yarn install --cache-folder ~/.cache/yarn

  - &restore_yarn_cache:
    keys:
    - rails-demo-yarn-{{ checksum "yarn.lock" }}
    - rails-demo-yarn-

  - &save_yarn_cache:
    key: rails-demo-yarn-{{ checksum "yarn.lock" }}
    paths:
    - ~/.cache/yarn

  - &db_wait:
    name: Wait for DB
    command: dockerize -wait tcp://localhost:5432 -timeout 1m

  - &db_setup:
    name: Database setup
    command: bin/rails db:reset

  - &prettier:
    name: Run prettier
    command: yarn check-prettier

  - &eslint:
    name: Run eslint #for gigs
    command: yarn check-eslint

  - &rubocop:
    name: Run rubocop
    command: bundle exec rubocop

  - &haml_lint
    name: Run haml-lint
    command: bundle exec haml-lint app/views

  - &sass_lint:
    name: Run sass lint
    command: yarn check-sass

jobs: # a collection of steps
  prettier:
    <<: *base
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache: *restore_gem_cache
      - run: *bundler
      - run: *bundle
      - restore_cache: *restore_yarn_cache
      - run: *yarn
      - save_cache: *save_yarn_cache
      - run: *db-wait
      - run: *db-setup
      - run: *prettier
      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs

  eslint:
    <<: *base
    steps:
      - checkout
      - restore_cache: *restore_gem_cache
      - run: *bundler
      - run: *bundle
      - restore_cache: *restore_yarn_cache
      - run: *yarn
      - save_cache: *save_yarn_cache
      - run: *db-wait
      - run: *db-setup
      - run: *eslint
      - store_test_results:
        path: test_results

  rubocop:
    <<: *base
    steps:
      - checkout
      - restore_cache: *restore_gem_cache
      - run: *bundler
      - run: *bundle
      - restore_cache: *restore_yarn_cache
      - run: *yarn
      - save_cache: *save_yarn_cache
      - run: *db-wait
      - run: *db-setup
      - run: *rubocop
      - store_test_results:
        path: test_results

  haml-lint:
    <<: *base
    steps:
      - checkout
      - restore_cache: *restore_gem_cache
      - run: *bundler
      - run: *bundle
      - restore_cache: *restore_yarn_cache
      - run: *yarn
      - save_cache: *save_yarn_cache
      - run: *db-wait
      - run: *db-setup
      - run: *haml-lint
      - store_test_results:
        path: test_results

  sass-lint:
    <<: *base
    steps:
      - checkout
      - restore_cache: *restore_gem_cache
      - run: *bundler
      - run: *bundle
      - restore_cache: *restore_yarn_cache
      - run: *yarn
      - save_cache: *save_yarn_cache
      - run: *db-wait
      - run: *db-setup
      - run: *sass-lint
      - store_test_results:
        path: test_results

workflows:
  version: 2
  build:
    jobs:
      - prettier
      - eslint
      - rubocop
      - haml-lint
      - sass-lint
